//
//  PickLocationOnMapViewController.swift
//  DoorDashDemo
//
//  Created by Saikumar Kankipati on 12/25/18.
//  Copyright (c) 2018 Saikumar Kankipati. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreLocation

protocol PickLocationOnMapDisplayLogic: class {
}

class PickLocationOnMapViewController: UIViewController, PickLocationOnMapDisplayLogic {
  var interactor: PickLocationOnMapBusinessLogic?
  var router: (NSObjectProtocol & PickLocationOnMapRoutingLogic & PickLocationOnMapDataPassing)?

	
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = PickLocationOnMapInteractor()
    let presenter = PickLocationOnMapPresenter()
    let router = PickLocationOnMapRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
		
  }
	
	func showErrorAlert() {
		let alert = UIAlertController(title: "Request Unsuccessful!!", message: "Location services may not be avilable or try selecting another locaiton", preferredStyle: .alert)
		alert.addAction(UIAlertAction(title: "OK", style: .cancel, handler: nil))
		self.present(alert, animated: true)
	}
}

extension PickLocationOnMapViewController :PickLocationMapViewDelegate {
	func geoCodingFailure() {
		showErrorAlert()
	}
	
	func confirmAddressTapped(selectedLocation: CLLocation) {
		
	}
	
	func loadLocationFailure() {
		showErrorAlert()
	}
}
